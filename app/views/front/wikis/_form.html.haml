= form_with(model: (current_wiki.new_record? ? [:front, current_wiki.post] : [:wiki, :front, current_wiki.post]), local: false, html: { class: 'post-form -wiki-form', novalidate: true, data: { controller: 'wiki-form editor2-form dirty-form', action: 'ajax:before->wiki-form#submit ajax:success->wiki-form#success dirty-form:force-dirty->dirty-form#setForceDirty', target: 'dirty-page.form' } }) do |f|
  - if current_wiki.conflict?
    .alert.alert-warning.conflictinfo
      %p
        %strong 저장을 계속하기 전에 검토가 필요합니다.
      %p
        #{smart_date_tag(current_wiki.last_history.created_at)}
        @#{current_wiki.last_history.user.nickname}님이 위키를 먼저 업데이트했습니다.
        충돌하는 변경 사항은 없는지 검토한 후에 다시 저장해 주세요.
        두 버전의 다른 점은 아래와 같이 표시해 두었습니다.
      %p
        %br
        .conflictlegend
          예시)
          .conflict-deletion
            .content @#{current_wiki.last_history.user.nickname}님이 편집했던 내용
          %i.fa.fa-arrows-h
          .conflict-insertion
            .contents-header__title 내가 편집 중인 내용
  = f.hidden_field :issue_id
  = f.hidden_field :has_poll, value: false
  = f.hidden_field :has_survey, value: false
  - if current_wiki.persisted?
    = hidden_field_tag :last_wiki_history_id, current_wiki.last_history.try(:id)
  - controls = capture do
    - if current_wiki.active?
      .submitbox.text-right
        - if current_wiki.persisted?
          = link_to '닫기', front_post_path(current_wiki.post, params.permit(:folder_id)), class: 'btn btn-link btn-sm btn-block-phone', data: { 'turbolinks-action': 'replace' }
        = f.button '저장하고 닫기', class: 'btn btn-secondary btn-sm btn-block-phone', value: 'after_close', data: { disable_with: "저장 중...", target: 'wiki-form.submitButton' }
        = f.submit '저장하고 계속 편집', class: 'btn btn-primary btn-sm btn-block-phone', data: { disable_with: "저장 중...", target: 'wiki-form.submitButton' }
        - if !current_wiki.conflict? && local_assigns[:continue_editing] && current_wiki.last_history.present? && current_wiki.last_history.user == current_user
          .help-block.small.text-right.text-muted
            %i.fa.fa-clock-o
            #{smart_date_tag(current_wiki.last_history.created_at)} 위키 이력에 덧붙입니다.
            = f.fields_for :wiki do |ff|
              = ff.hidden_field :continue_editing, value: true
  - if controls.present? && current_wiki.too_long?
    .controls.-top
      = controls


  .post-wiki
    .body.-full.-edit
      .inputgroup
        - if current_group.labels.any? || can?(:labels, current_group)
          .label.dropdown{ data: { controller: 'label-picker phone-dropdown' } }
            .toggle{ data: { toggle: 'dropdown' } }
              %span.preview{ data: { target: 'label-picker.preview' } }
                - if current_wiki.post.label.present?
                  = current_wiki.post.label.title
              %i.fa.fa-smile-o{ class: ( 'collapse' if current_wiki.post.label.present?), data: { target: 'label-picker.placeholder' } }
              %i.fa.fa-angle-down
            .dropdown-menu
              - current_group.labels.each do |label|
                .dropdown-item{ data: { action: 'click->label-picker#select', 'label-picker': { title: label.title, id: label.id } } }
                  = label.title
                  %span.body #{label.body}
              - more = capture do
                - if current_wiki.post.label.present?
                  .dropdown-item{ data: { action: 'click->label-picker#select', 'label-picker-title': '' } }
                    라벨 제거
                - if can?(:labels, current_group)
                  = link_to front_labels_path, class: 'dropdown-item' do
                    라벨 관리
              - if more.present?
                - if current_group.labels.any?
                  .dropdown-divider
                = more
            = f.hidden_field :label_id, data: { target: 'label-picker.field' }
        = f.text_field :base_title, placeholder: '제목...', class: 'formtitle', rows: 1, maxlength: 50, data: { controller: 'auto-resize', target: 'wiki-form.titleField' }
      = f.fields_for :wiki do |ff|
        = editor(ff.object.body, conflict_source_body: (current_wiki.conflicted_body if current_wiki.conflict?))
        = ff.hidden_field :body, data: { target: 'wiki-form.bodyField' }

  - if controls.present?
    .controls
      .control
        = controls

      - if current_issue.folders.any?
        - form_folder = current_wiki.persisted? ? current_wiki.post.folder : current_folder

        .control
          %label
            폴더
            &nbsp;
          %br.d-none.d-xs-block
          - threaded_folders = Folder.threaded(current_issue.folders)
          %select.channel-menu-folders{ name: 'post[folder_id]', data: { controller: 'select2-box', action: 'select2-box:select->select2-box#fieldValue' } }
            %option(value='') 폴더 없음
            != options_for_threaded_folders(threaded_folders, form_folder)

