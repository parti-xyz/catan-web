- is_child = comment.parent.present?
.post-comment{ class: ('-child' if is_child), data: { controller: 'comment-form-edit ripplet', action: 'ripple->ripplet#run' } }
  %a{ id: comment_line_anchor_dom_id(comment) }
  - if comment.is_decision?
    .decision
  - else
    .userimage
      .userimagebg{ style: "background-image: url(#{comment.user.image.sm.url})" }
  .post-comment-main{ data: { controller: ('comment-form-new' unless is_child) } }
    .view.collapse.show{ data: { target: 'comment-form-edit.viewContent ripplet.item' } }
      - if comment.is_decision?
        %span.decision
          토론 정리
      - else
        %span.user{ data: { controller: 'content-popover', 'content-popover': { url: user_front_members_path(comment.user), options: h({ container: '.front-app' }.to_json) } } }
          %span.usernickname= comment.user.nickname
          %span.memberrole= comment.user.current_group_member&.role
      .datetime
        = smart_date_tag comment.created_at
      - if comment.choice.present? && !comment.post&.poll&.hidden_voters?
        .voting{ class: "-#{comment.choice}" }
          = comment.choice_text
      .body{ class: ('-mine' if comment.user == current_user) }
        / comment 본문
        - if comment.almost_deleted?
          %span.screened= t('labels.almost_deleted')
        - elsif comment.blinded?(current_user)
          %span.screened= t('labels.comment_blind_info')
        - else
          .bodyline{ class: ('-html' if comment.is_html?) }
            != comment_format(comment)
          - if comment.is_decision?
            .author-users
              .label
                - if comment.comment_histories_count <= 1
                  편집자
                - else
                  .dropdown{ data: { controller: 'phone-dropdown remote-dropdown',
                                     'remote-dropdown-url': front_comment_comment_histories_path(comment_id: comment) } }
                    %a.mr-1{ href: '#',
                        data: { toggle: 'dropdown',
                                target: 'remote-dropdown.toggle' } }
                      편집 #{comment.comment_histories_count}회
                      %i.fa.fa-caret-down
                    .dropdown-menu.dropdown-menu-right{ data: { target: 'remote-dropdown.menu' } }
                      .dropdown-item{ data: { target: 'remote-dropdown.spinner' } }
                        %i.fa.fa-spinner.fa-pulse
                        로딩 중...

              - comment.authors.each do |user|
                %span.user{ data: { controller: 'content-popover',
                                    'content-popover': { url: user_front_members_path(user),
                                                         options: h({ container: '.front-app' }.to_json) } } }
                  .image{ style: "background-image: url(#{user.image.sm.url});",
                          title: user.nickname }
          - if comment.wiki_history.present?
            .mt-1
              = link_to front_post_path(comment.post, wiki_history_id: comment.wiki_history.id), class: "font-size-sm #{comment.wiki_history == local_assigns[:comment_current_wiki_history] ? 'text-danger' : 'text-muted'}" do
                %i.fa.fa-clock-o
                #{smart_date_tag(comment.wiki_history.created_at)} #{user_subject_word(comment.wiki_history.user)} 업데이트한 위키 이력의 댓글입니다.

      - if !comment.almost_deleted?
        - comment_moremenu = capture do
          - if can?(:update, comment)
            = link_to '수정', '#', class: 'dropdown-item', data: { action: 'click->comment-form-edit#open' }
          - if can?(:destroy, comment)
            = link_to '삭제', front_comment_path(comment), method: :delete, remote: true, class: 'dropdown-item', data: { confirm: '정말 삭제하시겠습니까?', action: 'ajax:success->comment-form-sync#update' }

        - if comment_moremenu.present?
          .moremenu
            .dropdown{ data: { controller: 'phone-dropdown' } }
              %button.btn.btn-link.btn-sm{ "data-toggle": "dropdown" }
                %i.fa.fa-ellipsis-v
              .dropdown-menu.dropdown-menu-right
                = comment_moremenu

      - if !comment.almost_deleted? && !comment.blinded?(current_user)
        .reactions
          .reaction
            - if user_signed_in?
              %a.link{ href: '#', data: { action: 'click->comment-form-new#open', mention: (comment.user.nickname if comment.user != current_user) } } 댓글달기
            - else
              %a.link{ href: '#', data: { action: 'sign-in-launcher#modal' } } 댓글달기
          = render 'front/posts/show/upvotings/reaction', current_upvotable: comment
          = render 'front/bookmarks/reaction', bookmarkable: comment

        - if comment.file_sources_only_image.present? || comment.file_sources_only_doc.present?
          .comment-filesource-listings
            / comment 이미지
            - if comment.file_sources_only_image.present?
              .comment-filesource-image-listing{ data: { controller: 'photoswipe' } }
                = render layout: 'layouts/photoswipe', locals: { file_sources: comment.file_sources_only_image, title: excerpt(comment.body_striped_tags, length: 120) } do |file_source|
                  %img.img{ src: file_source.attachment.sm.url }
            / comment 파일
            - if comment.file_sources_only_doc.present?
              .comment-filesource-doc-listing
                - comment.file_sources_only_doc.each do |file_source|
                  .doc{ data: { controller: 'download', download: { url: file_source.url, 'file-source-id': file_source.id, 'file-name': file_source.name }, action: 'click->download#execute' } }
                    %i.fa.fa-floppy-o
                    %span.name= file_source.name
                    %span.size= number_to_human_size(file_source.file_size)

    - if can?(:edit, comment)
      .form.collapse{ data: { target: 'comment-form-edit.formContent' } }
        = render 'front/posts/show/comment/form', current_comment: comment, current_post: comment.post, parent_comment: comment.parent

    - if local_assigns[:child_comments]&.any?
      .post-comments.-children
        - child_comments.each do |child_comment|
          = render 'front/posts/show/comment', comment: child_comment, is_child: true

    - if !comment.almost_deleted? && !is_child
      .post-comment.-form.-child.collapse{ data: { target: 'comment-form-new.formContent' } }
        = render 'front/posts/show/comment/new', current_post: comment.post, parent_comment: comment