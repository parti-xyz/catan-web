- has_no_poll = (current_post.new_record? || current_post.poll.blank? || current_post.poll.new_record?)
- has_no_survey = (current_post.new_record? || current_post.survey.blank? || current_post.survey.new_record?)

= form_with(model: [:front, current_post], local: false, html: { class: 'post-form', novalidate: true, data: { controller: 'post-form editor2-form dirty-form validate-form', action: "ajax:before->post-form#submit ajax:before->validate-form#submit dirty-form:force-dirty->dirty-form#setForceDirty", target: 'dirty-page.form' } }) do |f|
  = f.hidden_field :issue_id
  = f.hidden_field :has_poll, value: !has_no_poll, data: { target: 'post-form.hasPollField' }
  = f.hidden_field :has_survey, value: !has_no_survey, data: { target: 'post-form.hasSurveyField' }

  .post-meta
    .userimage{ data: { controller: 'content-popover', 'content-popover': { url: user_front_members_path(current_user), options: h({ container: '.front-app' }.to_json) } } }
      .userimagebg{ style: "background-image: url(#{current_user.image.sm.url})" }
    .desc
      %span.usernickname{ data: { controller: 'content-popover', 'content-popover': { url: user_front_members_path(current_user), options: h({ container: '.front-app' }.to_json) } } }
        = current_user.nickname
      .createdat 지금
  .inputgroup
    - if current_group.labels.any? || can?(:labels, current_group)
      .label.dropdown{ data: { controller: 'label-picker phone-dropdown' } }
        .toggle{ data: { toggle: 'dropdown' } }
          %span.preview{ data: { target: 'label-picker.preview' } }
            - if current_post.label.present?
              = current_post.label.title
          %i.fa.fa-smile-o{ class: ( 'collapse' if current_post.label.present?), data: { target: 'label-picker.placeholder' } }
          %i.fa.fa-angle-down
        .dropdown-menu
          - current_group.labels.each do |label|
            .dropdown-item{ data: { action: 'click->label-picker#select', 'label-picker': { title: label.title, id: label.id } } }
              = label.title
              %span.body #{label.body}
          - more = capture do
            - if current_post.label.present?
              .dropdown-item{ data: { action: 'click->label-picker#select', 'label-picker-title': '' } }
                라벨 제거
            - if can?(:labels, current_group)
              = link_to front_labels_path, class: 'dropdown-item' do
                라벨 관리
          - if more.present?
            - if current_group.labels.any?
              .dropdown-divider
            = more
        = f.hidden_field :label_id, data: { target: 'label-picker.field' }
    = f.text_field :base_title, class: 'control', required: true, placeholder: '제목...', data: { controller: 'auto-resize', target: 'post-form.baseTitleField', 'value-missing-message': '제목을 입력해 주세요.' }, maxlength: 50, autocomplete: "off"

  .form-group
    = editor(f.object.body)
    = f.hidden_field :body, class: 'form-control', data: { target: 'post-form.bodyField validate-form.editorHtml', 'value-missing-message': '본문 내용이 비었어요.' }

  - if current_issue.folders.any?
    - form_folder = current_post.persisted? ? current_post.folder : current_folder

    - threaded_folders = Folder.threaded(current_issue.folders)
    .form-group.form-inline.folderfield
      %label
        폴더
        &nbsp;
      %br.d-none.d-xs-block
      %select.channel-menu-folders{ name: 'post[folder_id]', data: { controller: 'select2-box', action: 'select2-box:select->select2-box#fieldValue' } }
        %option(value='') 폴더 없음
        != options_for_threaded_folders(threaded_folders, form_folder)

  .form-group.filesourcesfield{ data: { target: 'post-form.fileSourcesFieldGroup' }, class: ('-active' if current_post.file_sources.any?) }
    .header
      사진&middot;파일
    .main
      .images{ data: { target: 'post-form.imageFileSourcesContainer' } }
        = f.fields_for :file_sources, current_post.file_sources_only_image do |ff|
          = render 'front/file_sources/form/field', f: ff, js_controller_name: 'post-form'
      .docs{ data: { target: 'post-form.docFileSourcesContainer' } }
        = f.fields_for :file_sources, current_post.file_sources_only_doc do |ff|
          = render 'front/file_sources/form/field', f: ff, js_controller_name: 'post-form'
    .footer
      .btn.btn-secondary.btn-sm.btn-block-phone{ data: { target: 'post-form.addFileSourceFieldButton', action: 'click->post-form#addFileSourceField' } }
        + 파일 추가
        %span.counter
          (
          %span{ data: { target: 'post-form.fileSourcesCounter' } }<>= f.object.persisted? ? f.object.file_sources_count : 0
          \/
          %span<> 20
          )
      .btn.btn-light.btn-sm.text-muted.btn-block-phone{ data: { action: 'click->post-form#closeFileSourcesFieldGroup' } } 업로드 취소

      .template{ data: { target: 'post-form.fileSourceFieldTemplate' } }
        = escape_once_block do
          = f.fields_for :file_sources, FileSource.new(), child_index: 'NEW_RECORD' do |ff|
            = render 'front/file_sources/form/field', f: ff, js_controller_name: 'post-form'
      .template{ data: { target: 'post-form.imageFileSourcePreviewTemplate' } }
        = escape_once_block do
          = render 'front/file_sources/form/preview', file_source: FileSource.new(), type: :image, js_controller_name: 'post-form'
      .template{ data: { target: 'post-form.docFileSourcePreviewTemplate' } }
        = escape_once_block do
          = render 'front/file_sources/form/preview', file_source: FileSource.new(), type: :doc, js_controller_name: 'post-form'
    .helper.text-muted
      %hr
      %span.badge.badge-secondary TIP
      최대 크기 10M 파일을 20개까지 업로드할 수 있습니다. 이미지는 드래그해서 순서를 조정할 수 있습니다.

  .form-group.pollfield{ data: { target: 'post-form.pollFieldGroup' }, class: ('-active' if current_post.poll.present?) }
    .header
      찬반투표
    .main
      = f.fields_for :poll, (Poll.new if has_no_poll) do |ff|
        .form-group
          = ff.label :title do
            찬반투표 제목
          = ff.text_field :title, maxlength: 100, autocomplete: "off", required: true, class: 'form-control', placeholder: 'ex. 탕수육소스는 찍어먹어야합니다', data: { 'value-missing-message': '찬반투표 제목을 넣어 주세요.' }
        .form-group.form-inline
          %label 진행 기간&nbsp;
          - if ff.object.persisted?
            - current_duration_day = '0'

            - poll_durationsoptions = []
            - if ff.object.expires_at.present? and ff.object.open?
              - poll_durationsoptions << ["기간 변경없이 #{l ff.object.expires_at.to_date}까지 진행", '']
              - current_duration_day = ''

            - poll_durationsoptions += [1, 3, 7].map { |i| [ "지금부터 #{i}일 동안", i] } + [['지금부터 계속', 0]]

            - poll_durationsoptions << [(ff.object.open? ? '바로 종료' : '종료 유지'), -1]
            - unless ff.object.open?
              - current_duration_day = '-1'

            = ff.select :duration_days, options_for_select(poll_durationsoptions, current_duration_day), {}, class: 'form-control'
          - else
            = ff.select :duration_days, options_for_select([0, 1, 3, 7].map { |i| [ (i == 0 ? "계속" : "#{i}일 동안"), i] }, ff.object.duration_days), {}, class: 'form-control'
        .form-group
          .form-check
            = ff.check_box :hidden_intermediate_result, class: 'form-check-input'
            = ff.label :hidden_intermediate_result, '종료 될 때까지 중간 투표 집계를 숨깁니다.', class: 'form-check-label'

          .form-check
            = ff.check_box :hidden_voters, class: 'form-check-input'
            = ff.label :hidden_voters, '누가 어디에 투표했는지 익명으로 진행합니다.', class: 'form-check-label'

    - unless f.object.poll&.persisted?
      .footer
        .btn.btn-light.btn-sm.text-muted{ data: { action: 'click->post-form#closePollFieldGroup' } } 찬반투표 취소

  .form-group.surveyfield{ data: { target: 'post-form.surveyFieldGroup' }, class: ('-active' if current_post.survey.present?) }
    .header
      설문
    .main
      = f.fields_for :survey, (Survey.new if has_no_survey) do |ff|
        - if ff.object.new_record?
          .form-group
            %label 제안이 있으시면 넣어주세요. (선택사항)
            .optionfields{ data: { target: 'post-form.surveyOptions' } }
              - 2.times do |i|
                = ff.fields_for :options, Option.new, child_index: i do |fff|
                  = render 'front/posts/form/survey/option_field', f: fff, static: true, input_data: { placeholder: "ex. 제안#{i + 1}" }
            .btn.btn-secondary.btn-sm{ data: { action: 'click->post-form#addSurveyOptionField' } }
              + 제안 추가
        .template{ data: { target: 'post-form.surveyOptionTemplate' } }
          = escape_once_block do
            = ff.fields_for :options, Option.new, child_index: 'NEW_RECORD' do |fff|
              = render 'front/posts/form/survey/option_field', f: fff, static: true, input_data: { placeholder: "ex. 추가 제안" }
        .form-group.form-inline
          %label 진행 기간&nbsp;
          - if ff.object.persisted?
            - current_duration_day = '0'

            - poll_durationsoptions = []
            - if ff.object.expires_at.present? and ff.object.open?
              - poll_durationsoptions << ["기간 변경없이 #{l ff.object.expires_at.to_date}까지 진행", '']
              - current_duration_day = ''

            - poll_durationsoptions += [1, 3, 7].map { |i| [ "지금부터 #{i}일 동안", i] } + [['지금부터 계속', 0]]

            - poll_durationsoptions << [(ff.object.open? ? '바로 종료' : '종료 유지'), -1]
            - unless ff.object.open?
              - current_duration_day = '-1'

            = ff.select :duration_days, options_for_select(poll_durationsoptions, current_duration_day), {}, class: 'form-control'
          - else
            = ff.select :duration_days, options_for_select([0, 1, 3, 7].map { |i| [ (i == 0 ? "계속" : "#{i}일 동안"), i] }, ff.object.duration_days), {}, class: 'form-control'
        .form-group
          .form-check
            = ff.check_box :multiple_select, class: 'form-check-input'
            = ff.label :multiple_select, '제안 항목을 여러개 선택할 수 있습니다.', class: 'form-check-label'
          .form-check
            = ff.check_box :hidden_intermediate_result, class: 'form-check-input'
            = ff.label :hidden_intermediate_result, '종료 될 때까지 중간 투표 집계를 숨깁니다.', class: 'form-check-label'
          .form-check
            = ff.check_box :hidden_option_voters, class: 'form-check-input'
            = ff.label :hidden_option_voters, '제안에 누가 투표했는지 익명으로 진행합니다.', class: 'form-check-label'
    - unless f.object.survey&.persisted?
      .footer
        .btn.btn-light.btn-sm.text-muted{ data: { action: 'click->post-form#closeSurveyFieldGroup' } } 설문 취소

  .form-group.gadgetcontrol
    %button.btn.btn-xs.btn-link.btn-sm.-active{ data: { action: 'click->post-form#openFileSourcesFieldGroup', target: 'post-form.fileSourcesOpenButton' } }
      %i.fa.fa-cloud-upload
      = t('labels.new_post_file_source_button')

    - if (current_post.new_record? || (has_no_poll && has_no_survey))
      %button.btn.btn-xs.btn-link.btn-sm{ class: ('-active' if has_no_survey), data: { action: 'click->post-form#openPollFieldGroup', target: 'post-form.pollOpenButton'} }
        %i.fa.fa-fire
        = t('labels.new_post_poll_button')
      %button.btn.btn-xs.btn-link.btn-sm{ class: ('-active' if has_no_poll), data: { action: 'click->post-form#openSurveyFieldGroup', target: 'post-form.surveyOpenButton'} }
        %i.fa.fa-list-ul
        = t('labels.new_post_survey_button')

    - if can?(:pin, f.object)
      .form-check.form-check-inline.pinnedfield
        = f.check_box :pinned, class: 'form-check-input', id: 'pinned'
        = f.label :pinned, class: 'form-check-label', for: 'pinned' do
          게시물 고정하기

  .form-group
    = f.submit '게시', class: 'btn btn-primary btn-block', data: { disable_with: "게시 중...", target: 'post-form.submitButton' }