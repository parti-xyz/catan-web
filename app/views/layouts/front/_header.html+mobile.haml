- return if current_group.blank?

.front-navbar{ data: { controller: ('watermark' unless Rails.env.production?), 'watermark-text': Rails.env } }
  .centermenu
    = link_to current_group.head_title, root_url, class: 'link'
    = meta_icons(current_group)

  .menugroup
    - if !current_group.private? || (user_signed_in? && current_group&.member?(current_user))
      - if content_for?(:playground_back_content)
        = yield(:playground_back_content)
      - else
        .menuitem
          = link_to front_menu_path, class: 'link' do
            %i.fa.fa-bars.fa-fw
      - if user_signed_in? && current_group&.member?(current_user)
        .menuitem
          = link_to front_search_form_path(issue_id: @current_issue&.id), class: 'link' do
            %i.fa.fa-search.fa-fw

  .menugroup
    - if user_signed_in? && current_group&.member?(current_user)
      .menuitem.notification{ id: 'navbar-messages', data: { controller: 'content-loader', 'content-loader': { 'reload-on-connect': 'true', url: nav_front_messages_path(mobile: 'true'), 'refresh-interval': 15_000.to_s }, 'turbolinks-permanent': true } }
        = link_to front_messages_path, class: 'icons' do
          %i.fa.fa-bell.fa-fw

    - if user_signed_in?
      .dropdown.menuitem{ data: { controller: 'phone-dropdown' } }
        .userimage{ "data-toggle" => "dropdown", :href => "#" }
          .userimagebg{ style: "background-image: url(#{current_user.image.sm.url})" }
        .dropdown-menu.usermenu.dropdown-menu-right
          - if current_group.member?(current_user)
            = link_to edit_me_front_members_path, class: 'dropdown-item' do
              내 프로필
          = link_to '계정 설정', edit_user_registration_path, class: 'dropdown-item'
          = link_to '로그아웃', destroy_user_session_path, method: :delete, class: 'dropdown-item'
          - if current_group.member?(current_user)
            .dropdown-divider
            = link_to "#{current_group.title} 그룹 탈퇴", cancel_front_member_path(current_user.smart_group_member(current_group)), method: :delete, class: 'dropdown-item', data: { confirm: "정말 #{current_group.title} 그룹에서 탈퇴하시겠습니까? 그룹에 게시한 글은 모두 보존되며 빠띠 가입도 유지됩니다." }
          - member_groups = current_user.member_groups.sibilings(current_group).load
          - member_groups.each_with_index do |group, index|
            - if index == 0
              .dropdown-divider
              .dropdown-header
                내 그룹
            = link_to root_url(subdomain: group.subdomain), class: 'dropdown-item', target: ('_blank' if group != current_group) do
              = group.title
              - if group != current_group
                %i.fa.fa-external-link.small.text-muted
              - if group == current_group
                %i.fa.fa-check
          - if current_group.organization.default?
            .dropdown-divider
            = link_to expedition_url(subdomain: nil), class: 'dropdown-item', target: '_blank' do
              다른 그룹 탐색
              %i.fa.fa-external-link.small.text-muted
            = link_to new_group_configuration_url(subdomain: nil), class: 'dropdown-item', target: '_blank' do
              그룹 만들기
              %i.fa.fa-external-link.small.text-muted
    - else
      .menuitem
        = link_to '로그인', new_user_session_path, class: 'link'
